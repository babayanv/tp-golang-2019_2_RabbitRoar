{
  "openapi": "3.0.0",


  "info": {
    "version": "1",
    "title": "Svoyak game project API",
    "description": "Some day there will be some info..."
  },


  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "http://frontend.photocouple.space",
      "description": "Production server"
    }
  ],

  "paths": {

    "/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "login endpoint",
        "description": "Sets SessionID cookie.",
        "parameters": [
          {
            "in": "query",
            "name": "credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "username",
                    "password"
                  ],
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorised"
          }
        }
      }
    },

    "/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "sign up endpoint",
        "description": "SignUp user also sets SessionID cookie.",
        "parameters": [
          {
            "in": "query",
            "name": "credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "username",
                    "password",
                    "email"
                  ],
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Validation error occurs."
          },
          "422": {
            "description": "Can not parse json. Or fields missing."
          }
        }
      }
    },

    "/logout": {
      "delete": {
        "tags": [
          "auth"
        ],
        "summary": "logout endpoint",
        "description": "removes session associated with SessionID in cookie.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/csrf" : {
      "get": {
        "summary": "get CSRF Token associated with session",
        "responses": {
          "200": {
            "description": "CSRF Token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "csrf": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "self profile detail view",
        "description": "Returns JSON object with profile preferences.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "profile edit view",
        "description": "Accepts JSON object with fields that should be updated.",
        "parameters": [
          {
            "in": "query",
            "name": "user fields to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "username",
                    "password"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorised"
          }
        }
      }
    },
    "/user/avatar": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "upload user avatar",
        "responses": {
          "200": {
            "description": "User avatar updated."
          },
          "400": {
            "description": "Error validating avatar."
          }
        }
      }
    },

    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "profile detail view",
        "description": "Returns JSON object with profile preferences.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get user object by UID.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },


    "/pack": {
      "get": {
        "tags": [
          "pack"
        ],
        "summary": "packs list view",
        "description": "Sorted by rating by default.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pack"
                  }
                }
              }
            }
          }
        }
      }
    },

    "/pack/{id}": {
      "get": {
        "tags": [
          "pack"
        ],
        "summary": "pack detail view",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pack"
                }
              }
            }
          }
        }
      }
    },
    "/pack/offline": {
      "get": {
        "tags": [
          "pack"
        ],
        "summary": "offline packs",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackOffline"
                }
              }
            }
          }
        }
      }
    },

    "/question": {
      "get": {
        "tags": [
          "question"
        ],
        "summary": "question list view",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/question/{id}": {
      "get": {
        "tags": [
          "question"
        ],
        "summary": "question detail view",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/Question"
                }
              }
            }
          }
        }
      }
    },

    "/game": {
      "get": {
        "tags": [
          "game"
        ],
        "summary": "game list view",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Game"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/game/{UUID}": {
      "get": {
        "tags": [
          "game"
        ],
        "summary": "game detail view",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Game"
                }
              }
            }
          }
        }
      }
    },
    "/game/{UUID}/join": {
      "post": {
        "tags": [
          "game"
        ],
        "summary": "join game",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "room successfully joined"
          }
        }
      }
    },
    "/game/leave": {
      "delete": {
        "tags": [
          "game"
        ],
        "summary": "leave current room",
        "responses": {
          "200": {
            "description": "successfully leaved"
          }
        }
      }
    },
    "/game/ws": {
      "get": {
        "tags": [
          "game"
        ],
        "summary": "establish websocket connection",
        "parameters": [

        ],
        "responses": {

        }
      }
    }

  },

  "components": {
    "schemas": {

      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },

      "Game": {
        "type": "object",
        "properties": {
          "UUID": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "playersCapacity": {
            "type": "integer"
          },
          "playersJoined": {
            "type": "integer"
          },
          "state": {
            "type": "integer"
          },
          "creator": {
            "type": "integer"
          }
        }
      },

      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string"
          },
          "media": {
            "type": "string",
            "description": "url to media associated with question"
          },
          "answer": {
            "type": "string"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "author": {
            "type": "integer",
            "format": "int32",
            "description": "author's id"
          },
          "tags": {
            "type": "string"
          }
        }
      },

      "PackOffline": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string"
            },
            "img": {
              "type": "string"
            },
            "rating": {
              "type": "integer",
              "format": "int32"
            },
            "author": {
              "type": "integer",
              "format": "int32"
            },
            "questions": {
              "type": "object",
              "properties": {
                "theme0": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                },
                "theme1": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                },
                "theme2": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                },
                "theme3": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                },
                "theme4": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            },
            "tags": {
              "type": "string"
            }
          }
        }
      },

      "Pack": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "img": {
            "type": "string"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "author": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "string"
          }
        }
      },

      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "rating": {
            "type": "integer",
            "format": "int64"
          },
          "avatar_url": {
            "type": "string"
          }
        }
      }
    }
  }

}
