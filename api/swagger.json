{
  "openapi": "3.0.0",


  "info": {
    "version": "1",
    "title": "Svoyak game project API",
    "description": "Some day there will be some info..."
  },


  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "http://frontend.photocouple.space",
      "description": "Production server"
    }
  ],

  "paths": {

    "/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "login endpoint",
        "description": "Sets SessionID cookie.",
        "parameters": [
          {
            "in": "query",
            "name": "credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "username",
                    "password"
                  ],
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorised"
          }
        }
      },
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "login CSRF Token",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Wrong username or password"
          }
        }
      }
    },

    "/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "signup endpoint",
        "description": "SignUp user also sets SessionID cookie.",
        "parameters": [
          {
            "in": "query",
            "name": "credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "username",
                    "password",
                    "email"
                  ],
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Validation error occurs."
          },
          "422": {
            "description": "Can not parse json. Or fields missing."
          }
        }
      }
    },

    "/logout": {
      "delete": {
        "tags": [
          "auth"
        ],
        "summary": "logout endpoint",
        "description": "removes session associated with SessionID in cookie.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "self profile view",
        "description": "Returns JSON object with profile preferences.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "profile edit view",
        "description": "Accepts JSON object with fields that should be updated.",
        "parameters": [
          {
            "in": "query",
            "name": "user fields to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "username",
                    "password"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorised"
          }
        }
      }
    },
    "/user/avatar": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "upload user avatar",
        "responses": {
          "200": {
            "description": "User avatar updated."
          },
          "400": {
            "description": "Error validating avatar."
          }
        }
      }
    },

    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "self profile view",
        "description": "Returns JSON object with profile preferences.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Get user object by UID.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },


  "components": {
    "schemas": {

      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },

      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "rating": {
            "type": "integer",
            "format": "int64"
          },
          "avatar_url": {
            "type": "string"
          }
        }
      }
    }
  }

}
